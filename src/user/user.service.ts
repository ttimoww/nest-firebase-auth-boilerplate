import { Injectable, Inject } from '@nestjs/common';
import { CollectionReference, Timestamp } from '@google-cloud/firestore';

// Documents
import { UserDocument } from 'src/user/user.document';
import { Role } from './role.enum';
@Injectable()
export class UserService {

    constructor(
        @Inject(UserDocument.collectionName)
        private userCollection: CollectionReference<UserDocument>,
    ) {}

    /**
     * Get the User from Firestore, if User does not exist it creates one
     * @param uid User Id (generated by Firebase auth)
     */
    async getUser(uid: string): Promise<UserDocument> {
        const userRef = this.userCollection.doc(uid);
        let userDoc = await userRef.get();
        if (!userDoc.exists) {
            await userRef.set({
                uid,
                createdAt: Timestamp.fromDate(new Date()),
                role: Role.user
            });
            userDoc = await userRef.get();
        }
        return userDoc.data();
    }
}
